syntax = "proto3";

package pb;

// Represents a single key, used for gets.
message Key {
    string key = 1;
}

// Represents a single value, can be used for put etc.
message Value {
    string value = 1;
}

// Represent a key-value pair that is used to return results.
message KeyValue {
    string key = 1;
    string value = 2;
}

// Represent a void message indicating success
message Success {
}

// Represents an error.
message Error {
    string msg = 1;
}

// Represents an argument for CAS
message CASArg {
    KeyValue kv = 1;
    Value value = 2;
}

// Represents an empty message
message Empty {}

// Represents a case where we need the client to connect
// to another server.
message Redirect {
    string server = 1;
}

// Represents an operation result.
message Result {
    oneof result {
        Redirect redirect = 1;
        KeyValue kv = 2;
        Success s = 3;
    }
}

// KvStore service
service KvStore {
    // Get the value associated with a key.
    rpc Get (Key) returns (Result) {}
    rpc Set (KeyValue) returns (Result) {}
    rpc Clear(Empty) returns (Result) {}
    rpc CAS(CASArg) returns (Result) {}
}

// Internal Raft representations.
enum Op {
    GET = 0;
    SET = 1;
    CLEAR = 2;
    CAS = 3;
}

// A type for arguments across all operations
message Command {
    Op operation = 1;
    oneof arg {
        Key get = 2;
        KeyValue set = 3;
        Empty clear = 4;
        CASArg cas = 5;
    }
}
